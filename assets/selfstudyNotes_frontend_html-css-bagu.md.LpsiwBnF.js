import{_ as a,c as l,o as e,a4 as i}from"./chunks/framework.BGthqKqN.js";const t="/selfstudy/frontend/html-css-bagu/b5496131287390f0e7ae009b9b9c2347.png",b=JSON.parse('{"title":"HTML & CSS 八股","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"selfstudyNotes/frontend/html-css-bagu.md","filePath":"selfstudyNotes/frontend/html-css-bagu.md"}'),r={name:"selfstudyNotes/frontend/html-css-bagu.md"},o=i('<h1 id="html-css-八股" tabindex="-1">HTML &amp; CSS 八股 <a class="header-anchor" href="#html-css-八股" aria-label="Permalink to &quot;HTML &amp; CSS 八股&quot;">​</a></h1><h2 id="css" tabindex="-1">css <a class="header-anchor" href="#css" aria-label="Permalink to &quot;css&quot;">​</a></h2><h3 id="flex布局" tabindex="-1">flex布局 <a class="header-anchor" href="#flex布局" aria-label="Permalink to &quot;flex布局&quot;">​</a></h3><h4 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h4><p>motivation：通过简单定义容器规则，尽可能不操作子元素（成为flex项目）</p><p>设置方式：给<strong>父</strong>元素设置 <strong>display: flex</strong>，子元素可以自动挤压或拉伸</p><ul><li>子元素会默认沿着主轴方向分布</li><li>父元素内放不下多个子元素时，会自动将子元素尺寸挤压变小以将所有子元素放入</li><li>当子元素的宽度或高度未设置时，该子元素尺寸会默认被设置为父元素的高度/宽度</li></ul><p>组成部分：</p><ul><li><strong>弹性容器 -</strong> 指的是父元素</li><li><strong>弹性盒子 -</strong> 指的是子元素</li><li><strong>主轴</strong>：默认在<strong>水平</strong>方向，从左到右</li><li><strong>侧轴 / 交叉轴</strong>：默认在<strong>垂直</strong>方向，从上到下</li></ul><h4 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h4><p>容器属性</p><ul><li>flex-direction</li><li>justify-content</li><li>align-items <ul><li>可以被flex元素的align-self属性覆盖</li></ul></li><li>flex-wrap</li><li>align-content <ul><li>多行对齐方式，单行无效，用浏览器检查工具中的图案记忆其与aligni-tems的区别</li></ul></li></ul><h3 id="水平垂直居中" tabindex="-1">水平垂直居中 <a class="header-anchor" href="#水平垂直居中" aria-label="Permalink to &quot;水平垂直居中&quot;">​</a></h3><ul><li>绝对定位 + 左上50%偏移 + translate50%</li><li>（盒子有宽高）上下左右偏移0 + margin auto</li><li>第一种方法的 translate 手动计算（所以要知道盒子的宽高具体是多少）</li><li>flex 布局</li></ul><h3 id="响应式设计-rwd" tabindex="-1">响应式设计（RWD） <a class="header-anchor" href="#响应式设计-rwd" aria-label="Permalink to &quot;响应式设计（RWD）&quot;">​</a></h3><p>RWD 指的是允许 Web 页面适应不同屏幕宽度因素等，进行布局和外观的调整的一系列实践。</p><p><strong>需要你理解的很重要的一点是响应式 Web 设计不是单独的技术，它是描述 Web 设计的一种方式、或者是一组最佳实践的一个词，它是用来建立可以响应查看内容的设备的样式的一个词。</strong></p><h4 id="现代布局技术" tabindex="-1">现代布局技术 <a class="header-anchor" href="#现代布局技术" aria-label="Permalink to &quot;现代布局技术&quot;">​</a></h4><p>媒体查询（@midia）</p><p>灵活网格（float）</p><p>多列布局（column-）</p><p>flex布局</p><p>CSS网格（fr单位）</p><h4 id="响应式排版" tabindex="-1">响应式排版 <a class="header-anchor" href="#响应式排版" aria-label="Permalink to &quot;响应式排版&quot;">​</a></h4><p>rem</p><p>vw / vh</p><h2 id="html" tabindex="-1">HTML <a class="header-anchor" href="#html" aria-label="Permalink to &quot;HTML&quot;">​</a></h2><h3 id="link-和-href-和-src" tabindex="-1">link 和 href 和 src <a class="header-anchor" href="#link-和-href-和-src" aria-label="Permalink to &quot;link 和 href 和 src&quot;">​</a></h3><p>TODO</p><h3 id="html5-特性" tabindex="-1">HTML5 特性 <a class="header-anchor" href="#html5-特性" aria-label="Permalink to &quot;HTML5 特性&quot;">​</a></h3><h4 id="语义化标签" tabindex="-1">语义化标签 <a class="header-anchor" href="#语义化标签" aria-label="Permalink to &quot;语义化标签&quot;">​</a></h4><ul><li>header：定义文档的页眉（头部）</li><li>nav：定义导航链接的部分</li><li>footer：定义文档或节的页脚（底部）</li><li>article：定义文章内容</li><li>section：定义文档中的节（section、区段）</li><li>aside：定义其所处内容之外的内容（侧边）</li></ul><p><img src="'+t+'" alt="image.png"></p><h4 id="媒体标签" tabindex="-1">媒体标签 <a class="header-anchor" href="#媒体标签" aria-label="Permalink to &quot;媒体标签&quot;">​</a></h4><ul><li>audio 音频标签 <ul><li>constrols - 控制面板</li><li>autoplay - 自动播放</li><li>loop = &#39;true&#39; - 循环播放</li></ul></li><li>video 视频标签 <ul><li>poster - 封面图链接，默认是视频第一帧</li><li>constrols</li></ul></li><li>source 标签 <ul><li>这个标签是夹在 video 标签之间，用来指定视频源</li></ul></li></ul><h4 id="表单" tabindex="-1">表单 <a class="header-anchor" href="#表单" aria-label="Permalink to &quot;表单&quot;">​</a></h4><ul><li>表单类型</li><li>表单属性</li><li>表单事件：主要是 oninput</li></ul><h4 id="进度条、度量器" tabindex="-1">进度条、度量器 <a class="header-anchor" href="#进度条、度量器" aria-label="Permalink to &quot;进度条、度量器&quot;">​</a></h4><ul><li>progress 标签：表示任务进度</li><li>meter 属性：显示剩余容量</li></ul><h4 id="dom-查询操作" tabindex="-1">DOM 查询操作 <a class="header-anchor" href="#dom-查询操作" aria-label="Permalink to &quot;DOM 查询操作&quot;">​</a></h4><p>document.querySelector()</p><p>document.querySelectorAll()</p><h4 id="web-存储" tabindex="-1">Web 存储 <a class="header-anchor" href="#web-存储" aria-label="Permalink to &quot;Web 存储&quot;">​</a></h4><p>新增客户端存储方式：</p><p>localStorage - 没有时间限制的本地数据存储</p><p>sessionStorage</p><h4 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h4><ul><li>拖拽</li><li>canvas 画布标签</li><li>svg</li><li>地理定位</li><li>history API：go、forward、back、pushstate</li></ul>',48),s=[o];function n(h,d,u,c,p,f){return e(),l("div",null,s)}const q=a(r,[["render",n]]);export{b as __pageData,q as default};
