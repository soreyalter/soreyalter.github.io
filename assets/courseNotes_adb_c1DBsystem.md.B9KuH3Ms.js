import{_ as l,c as a,o as i,a4 as t}from"./chunks/framework.BGthqKqN.js";const o="/adb/chap1/e2af251ea0031dd9fd0246fc5142aaab.png",s="/adb/chap1/fa4bd1d8d27238753516d8c6b7e324f7.png",n="/adb/chap1/5e963d8f61adcd4a6d33018b4507d348.png",r="/adb/chap1/78424d6c98fea2fabda1434c2a75bcb1.png",e="/adb/chap1/b3619c57cf698b94541bca48b98a8e3d.png",p="/adb/chap1/9ea4e8bace37d62d580d591cc7540c34.png",g="/adb/chap1/0151e55a325381f07e114b8482afc657.png",c="/adb/chap1/d31be9de0f86649d6abfbbf856f57b84.png",q=JSON.parse('{"title":"数据库系统","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"courseNotes/adb/c1DBsystem.md","filePath":"courseNotes/adb/c1DBsystem.md"}'),d={name:"courseNotes/adb/c1DBsystem.md"},u=t('<h1 id="数据库系统" tabindex="-1">数据库系统 <a class="header-anchor" href="#数据库系统" aria-label="Permalink to &quot;数据库系统&quot;">​</a></h1><blockquote><p>数据库、DBMS、数据库系统</p><p>提纲要求：</p><ul><li>DBMS系统结构组成</li><li>数据库、DBMS、数据库系统</li></ul></blockquote><h2 id="一、数据库系统基本概念" tabindex="-1">一、数据库系统基本概念 <a class="header-anchor" href="#一、数据库系统基本概念" aria-label="Permalink to &quot;一、数据库系统基本概念&quot;">​</a></h2><p><strong>数据</strong></p><ul><li>定义：数据是数据库中存储的基本对象</li><li>种类：数值数据（0-9）、非数值数据（字符）</li><li>特点：数据与其语义不可分</li></ul><p><strong>数据库</strong></p><ul><li>定义：长期存储在计算机内有组织的、可共享的大量数据的集合</li><li>基本特征： <ol><li>数据按一定数据模型组织、描述和储存</li><li>可为各种用户共享</li><li>数据联系密切，具有最小冗余度和较高的独立性</li><li>服务于某个特定的应用</li></ol></li><li>数据库<strong>模式</strong>：数据库中全体数据的<strong>逻辑结构</strong>和特征的描述</li></ul><p><strong>数据库管理系统（DBMS）</strong></p><ul><li>定义：是计算机程序的集合，用于创建和维护数据库</li><li>特点：位于操作系统和用户应用之间；总是基于某种数据模型</li></ul><p><strong>数据库系统（DBS）</strong></p><ul><li>定义：指在计算机系统中引入了数据库后的系统，即采用了数据库技术的计算机系统</li><li>特点：和数据库很像，关键词：结构化（数据模型）、共享、冗余度低、独立性高 <ol><li>数据结构化</li><li>数据的共享性高，冗余度低</li><li>数据独立性高</li><li>数据由DBMS统一管理和控制</li></ol></li></ul><p><img src="'+o+'" alt="image.png"></p><h2 id="二、dbms实现问题" tabindex="-1">二、DBMS实现问题 <a class="header-anchor" href="#二、dbms实现问题" aria-label="Permalink to &quot;二、DBMS实现问题&quot;">​</a></h2><p><strong>DBMS构成</strong></p><ul><li>数据结构：关系</li><li>数据操作：关系代数、SQL</li><li>数据存储：文件</li></ul><p><strong>Megatron2000 DBMS</strong></p><ul><li>特点：关系通过文件（ASCII）存储，数据库模式存储在特定文件中（ASCII）</li><li>功能：1. 定义表；2. 数据更新；3. 数据查询</li><li>查询执行过程：</li></ul><p>1. 读数据字典获取（表）R的属性</p><p>2. 读R文件，对每一行数据检查条件</p><ul><li>存在问题：（看PPT吧） <ul><li>元组平铺在磁盘上</li><li>低级的查询处理（连接和选择）</li><li>没有缓冲区管理</li><li>没有并发控制（事务管理）</li><li>没有索引（B+树）</li><li>没有可靠性（日志和恢复）</li><li>没有应用程序编程接口（API）</li></ul></li></ul><p><img src="'+s+'" alt="image.png"></p><p><img src="'+n+'" alt="image.png"></p><h2 id="三、数据库设计问题" tabindex="-1">三、数据库设计问题 <a class="header-anchor" href="#三、数据库设计问题" aria-label="Permalink to &quot;三、数据库设计问题&quot;">​</a></h2><p>主要是数据库模式设计问题，设计不规范引会引起以下问题：</p><p><strong>关系R(Tname, Addr, C#, Cname)</strong></p><p><strong>一个教师只有一个地址（户口所在地）</strong></p><p><strong>一个教师可教多门课程</strong></p><p><strong>一门课程只有一个任课教师因此R的主码是（C＃)</strong></p><ol><li><strong>数据冗余</strong></li></ol><p><img src="'+r+'" alt="image.png"></p><ol start="2"><li><strong>更新异常</strong></li></ol><p><img src="'+e+'" alt="image.png"></p><ol start="3"><li><strong>插入异常</strong></li></ol><p><img src="'+p+'" alt="image.png"></p><ol start="4"><li><strong>删除异常</strong></li></ol><p><img src="'+g+'" alt="image.png"></p><h2 id="四、数据库存取问题" tabindex="-1">四、数据库存取问题 <a class="header-anchor" href="#四、数据库存取问题" aria-label="Permalink to &quot;四、数据库存取问题&quot;">​</a></h2><p>用户与数据库的唯一接口——<strong>数据库语言</strong></p><p>DBMS支持用户通过数据库语言进行数据存 取</p><p>有三类数据库语言</p><ul><li>数据定义语言（Data Definition Language,<strong>DDL</strong>）——存取 数据库模式 <ul><li>数据操纵语言（Data Manipulation Language ，<strong>DML</strong>）——存取 数据库数据</li><li>数据库控制语言（Data Control Language，<strong>DCL</strong>）——存取 访问控制信息</li></ul></li></ul><p><img src="'+c+'" alt="image.png"></p>',42),m=[u];function b(_,h,f,D,S,B){return i(),a("div",null,m)}const P=l(d,[["render",b]]);export{q as __pageData,P as default};
