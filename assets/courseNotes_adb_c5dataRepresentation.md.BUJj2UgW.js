import{_ as a,c as i,o as l,a4 as e}from"./chunks/framework.BBKq6QKo.js";const t="/adb/chap5/2b5af2c092c5ad2239efb398cb011b9a.png",s="/adb/chap5/ee838ec7cd275d44fd4c50259306b9dc.png",r="/adb/chap5/8936d1461d52a77c3bfe5807f226033e.png",n="/adb/chap5/5feaccba2ce9c950b72b53f404d51235.png",p="/adb/chap5/84386722058b8970d97fa61ada629639.png",o="/adb/chap5/99d8674fee4b20572b1ffb91dfa295a7.png",h="/adb/chap5/76293d7430aa1d4f09318f28fd78b8a7.png",c="/adb/chap5/5fe95d849671ffffd4d2774e72518df9.png",d="/adb/chap5/3b97aaef9653bb64c2a71a2a18e4cf24.png",u="/adb/chap5/085f0adb7876933f0d38d63c13442867.png",b="/adb/chap5/cd9c279d87185cf5db635ff6761b41fc.png",g="/adb/chap5/dc5650b9158573abbb00ccd21f05083c.png",m="/adb/chap5/7ccb7231577111a940d81c0c6fd8770a.png",f="/adb/chap5/f7b51679c2232452abb736d0777013ec.png",k="/adb/chap5/787115c6f9c4f9f82917bc536e700504.png",_="/adb/chap5/c96d198a605a23a9f975db9fb7d4a0c8.png",F=JSON.parse('{"title":"数据的表示","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"courseNotes/adb/c5dataRepresentation.md","filePath":"courseNotes/adb/c5dataRepresentation.md"}'),q={name:"courseNotes/adb/c5dataRepresentation.md"},x=e('<h1 id="数据的表示" tabindex="-1">数据的表示 <a class="header-anchor" href="#数据的表示" aria-label="Permalink to &quot;数据的表示&quot;">​</a></h1><blockquote><p>1、数据项的表示</p><p>2、记录的表示</p><p><strong>3、记录在磁盘块中的组织*</strong></p><p>4、链表式堆文件和目录式堆文件</p></blockquote><h2 id="数据项的表示" tabindex="-1">数据项的表示 <a class="header-anchor" href="#数据项的表示" aria-label="Permalink to &quot;数据项的表示&quot;">​</a></h2><p>数据项表示关系数据库中元组的<strong>属性值</strong>，用<strong>字节序列</strong>来表示</p><p><strong>两种不同的数据项表示</strong></p><ul><li>定长数据项</li><li>变长数据项 <ul><li>带长度 （常用）</li><li>Null Terminated（结束符）</li></ul></li></ul><p><img src="'+t+'" alt="image.png"></p><h2 id="记录的组织" tabindex="-1">记录的组织 <a class="header-anchor" href="#记录的组织" aria-label="Permalink to &quot;记录的组织&quot;">​</a></h2><h3 id="固定格式定长记录" tabindex="-1">固定格式定长记录 <a class="header-anchor" href="#固定格式定长记录" aria-label="Permalink to &quot;固定格式定长记录&quot;">​</a></h3><p>所有记录具有相同的逻辑结构（模式）</p><p>考虑如下模式</p><p><img src="'+s+'" alt="image.png"></p><p><strong>不考虑寻址特点</strong></p><p>依次紧邻存放在磁盘中</p><p><img src="'+r+'" alt="image.png"></p><p><strong>考虑寻址特点</strong></p><p>假设记录和字段的开始地址必须是4的倍数</p><p><img src="'+n+'" alt="image.png"></p><p><strong>记录的首部</strong></p><ul><li>记录类型（模式信息）</li><li>记录长度</li><li>时间戳</li><li>其它信息</li></ul><p><img src="'+p+'" alt="image.png"></p><h3 id="可变格式记录" tabindex="-1">可变格式记录 <a class="header-anchor" href="#可变格式记录" aria-label="Permalink to &quot;可变格式记录&quot;">​</a></h3><p>每个记录的格式不同</p><h4 id="带有模式-语义-的方式" tabindex="-1">带有模式（语义）的方式 <a class="header-anchor" href="#带有模式-语义-的方式" aria-label="Permalink to &quot;带有模式（语义）的方式&quot;">​</a></h4><ul><li>记录的格式存储在记录中</li></ul><p><img src="'+o+`" alt="image.png"></p><h4 id="key-value-方式" tabindex="-1">Key-Value 方式 <a class="header-anchor" href="#key-value-方式" aria-label="Permalink to &quot;Key-Value 方式&quot;">​</a></h4><p>记录都以“ KEY + VALUE ”方式表示</p><p>KEY 与 VALUE 都以<strong>字节流</strong>（byte string）存储</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">typedef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    void</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //字节流指针</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> size;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //字节流长度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} DBT;</span></span></code></pre></div><p><strong>键值对数据库特点</strong></p><ul><li>数据类型没有限制</li><li>应用与数据库之间不需转换数据格式</li><li>不提供KEY和VALUE的内容和结构信息</li><li>应用必须知道所用的VALUE的含义（由应用来解释语义）</li></ul><p><strong>优缺点</strong></p><ul><li>灵活的记录格式，适合“松散”记录 <ul><li>尽管一个记录可能有大量字段，但某个记录通常只有 有限的几个字段</li><li>例如，病人的检验结果</li></ul></li><li>适合处理重复字段</li><li>适合记录格式演变</li><li>浪费存储空间</li></ul><h3 id="变长记录表示" tabindex="-1">变长记录表示 <a class="header-anchor" href="#变长记录表示" aria-label="Permalink to &quot;变长记录表示&quot;">​</a></h3><h4 id="首部指针法" tabindex="-1">首部指针法 <a class="header-anchor" href="#首部指针法" aria-label="Permalink to &quot;首部指针法&quot;">​</a></h4><ul><li>定长字段在前，变长字段在后</li><li>首部加入两个信息：记录长度，以及所有除第一个之外的变长字段起始处的指针</li></ul><p><img src="`+h+'" alt="image.png"></p><h4 id="混合格式" tabindex="-1">混合格式 <a class="header-anchor" href="#混合格式" aria-label="Permalink to &quot;混合格式&quot;">​</a></h4><ul><li>保持记录定长，将变长部分【变长字段和重复次数不确定的字段（比如明星影片集）】放在另一个块</li><li>记录本身存储开始指针 + 长度/结束指针 <ul><li>变长字段开始处的指针和该字段的长度</li><li>指向每一个重复字段开始处的指针和重复次数或者重复结束处</li></ul></li></ul><p><img src="'+c+'" alt="image.png"></p><h2 id="记录在块中的组织" tabindex="-1">记录在块中的组织（*） <a class="header-anchor" href="#记录在块中的组织" aria-label="Permalink to &quot;记录在块中的组织（\\*）&quot;">​</a></h2><p><strong>假设和前提</strong></p><ul><li>块的大小固定</li><li>记录组织成单个文件</li></ul><h3 id="定长记录" tabindex="-1">定长记录 <a class="header-anchor" href="#定长记录" aria-label="Permalink to &quot;定长记录&quot;">​</a></h3><p>一种是块头标识了该块中记录的数量</p><p>一种是块头用位图的方式表示空闲槽和已用的槽</p><p><img src="'+d+'" alt="image.png"></p><h3 id="变长记录" tabindex="-1">变长记录 <a class="header-anchor" href="#变长记录" aria-label="Permalink to &quot;变长记录&quot;">​</a></h3><p>块头有槽数和槽目录，第几个目录项就对应第几个记录，目录中存有有记录指针和记录长度</p><p>图中&lt;i, 3&gt;的寻址有错</p><p><img src="'+u+'" alt="image.png"></p><h3 id="记录的分隔" tabindex="-1">记录的分隔 <a class="header-anchor" href="#记录的分隔" aria-label="Permalink to &quot;记录的分隔&quot;">​</a></h3><ul><li>定长记录：不需分隔</li><li>变长记录：使用特殊标记 ，或者通过块内偏移量</li></ul><p><strong>跨块和不跨块记录</strong></p><p>跨块（spanned）方式下，记录的首部需要存储以下信息</p><ul><li>一个二进制位表示当前记录是否是一个片段</li><li>若干二进制位表明是否是记录的第一个片段或最后一个片段</li><li>指向前一个片段和后一个片段的指针</li></ul><p><img src="'+b+'" alt="image.png"></p><h3 id="聚簇" tabindex="-1">聚簇 <a class="header-anchor" href="#聚簇" aria-label="Permalink to &quot;聚簇&quot;">​</a></h3><h4 id="多关系聚簇" tabindex="-1">多关系聚簇 <a class="header-anchor" href="#多关系聚簇" aria-label="Permalink to &quot;多关系聚簇&quot;">​</a></h4><p>经常一起访问的记录存储在同一块或连续块中，提高查询效率</p><p><img src="'+g+'" alt="image.png"></p><h4 id="单关系聚簇" tabindex="-1">单关系聚簇 <a class="header-anchor" href="#单关系聚簇" aria-label="Permalink to &quot;单关系聚簇&quot;">​</a></h4><p>另一种聚簇 (对于RDB：单关系上的聚簇) ：将记录按某个字段顺序排列在块中</p><ul><li>加快按排序字段查询记录时的效率</li><li>利于归并联接 （will be discussed later）</li></ul><h3 id="记录地址" tabindex="-1">记录地址 <a class="header-anchor" href="#记录地址" aria-label="Permalink to &quot;记录地址&quot;">​</a></h3><p>物理地址和逻辑地址</p><p><img src="'+m+'" alt="image.png"></p><h2 id="记录的修改" tabindex="-1">记录的修改 <a class="header-anchor" href="#记录的修改" aria-label="Permalink to &quot;记录的修改&quot;">​</a></h2><h3 id="插入" tabindex="-1">插入 <a class="header-anchor" href="#插入" aria-label="Permalink to &quot;插入&quot;">​</a></h3><h4 id="记录无序的情况" tabindex="-1">记录无序的情况 <a class="header-anchor" href="#记录无序的情况" aria-label="Permalink to &quot;记录无序的情况&quot;">​</a></h4><ul><li>插入到任意块的空闲空间中</li><li>或申请一个新块（当所有块都已满时）</li><li>记录变长时，可使用偏移量表</li></ul><p><img src="'+f+'" alt="image.png"></p><h4 id="记录有序的情况" tabindex="-1">记录有序的情况 <a class="header-anchor" href="#记录有序的情况" aria-label="Permalink to &quot;记录有序的情况&quot;">​</a></h4><ul><li>找到记录应该放置的块</li><li>如果有空间，放入并调节记录顺序即可，否则有 两种方法： <ul><li>在“邻近块”中找空间</li><li>创建溢出块</li></ul></li></ul><h3 id="删除" tabindex="-1">删除 <a class="header-anchor" href="#删除" aria-label="Permalink to &quot;删除&quot;">​</a></h3><p>使用删除标记</p><ul><li>若使用偏移表，则可以修改偏移表项指针，将其 置空</li><li>若使用逻辑－物理地址映射表，则可以将物理地 址置空</li><li>可以在记录首部预留一开始位：0－未删除，1 已删除</li></ul><p>看习题理解删除标记</p><h2 id="块在文件中的组织" tabindex="-1">块在文件中的组织 <a class="header-anchor" href="#块在文件中的组织" aria-label="Permalink to &quot;块在文件中的组织&quot;">​</a></h2><p><strong>堆文件（Heap File）</strong></p><ul><li>最基本、最简单的文件结构</li><li>记录不以任何顺序排序</li><li>记录可能存放在物理不邻接的块上</li><li>插入容易，但查找和删除代价高</li></ul><h3 id="链表式堆文件组织" tabindex="-1">链表式堆文件组织 <a class="header-anchor" href="#链表式堆文件组织" aria-label="Permalink to &quot;链表式堆文件组织&quot;">​</a></h3><p>维护一个空闲块链表和一个满块链表</p><p><img src="'+k+'" alt="image.png"></p><h3 id="目录式堆文件组织" tabindex="-1">目录式堆文件组织 <a class="header-anchor" href="#目录式堆文件组织" aria-label="Permalink to &quot;目录式堆文件组织&quot;">​</a></h3><p>用目录索引指出该文件的数据块在哪（指针）</p><p><img src="'+_+'" alt="image.png"></p>',88),P=[x];function E(y,A,D,v,V,T){return l(),i("div",null,P)}const R=a(q,[["render",E]]);export{F as __pageData,R as default};
